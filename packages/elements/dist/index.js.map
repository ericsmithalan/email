{"version":3,"file":"index.js","sources":["../src/A.tsx","../src/Body.tsx","../src/Div.tsx","../src/Hr.tsx","../src/Img.tsx","../src/Li.tsx","../src/Ol.tsx","../src/Span.tsx","../src/Table.tsx","../src/Td.tsx","../src/Tr.tsx","../src/Ul.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\nimport { DepricatedLinkAttributes } from \"./types\";\n\nexport interface IAElement extends React.HTMLProps<HTMLAnchorElement>, DepricatedLinkAttributes {}\n\nconst styles = css({\n    ascA: {\n        fontSize: 13,\n    },\n});\n\nconst A: FC<IAElement> = (props: IAElement) => {\n    const newProps = useMergedProps(styles, props, A.defaultProps);\n    return <a {...(newProps as IAElement)} />;\n};\n\nA.defaultProps = {\n    className: styles.classNames.ascA,\n    target: \"_blank\",\n};\n\nexport { A };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps, CssArgs } from \"@email/css\";\nimport { DepricatedBodyAttributes } from \"./types\";\n\nexport interface IBodyElement extends React.HTMLProps<HTMLBodyElement>, DepricatedBodyAttributes {}\n\nconst styles = css({\n    ascBody: {\n        fontSize: (args: CssArgs<any>) => args.theme.fonts.fontDefaultSize,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: (args: CssArgs<any>) => args.theme.colors.backgroundColor,\n        marginTop: 0,\n        marginRight: 0,\n        marginBottom: 0,\n        marginLeft: 0,\n        paddingTop: 0,\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: 0,\n    },\n});\n\nconst Body: FC<IBodyElement> = (props: IBodyElement) => {\n    const newProps = useMergedProps(styles, props, Body.defaultProps);\n    return <body {...(newProps as IBodyElement)} />;\n};\n\nBody.defaultProps = {\n    className: styles.classNames.ascBody,\n};\n\nexport { Body };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps, CssStyle } from \"@email/css\";\n\nexport interface IDivElement extends React.HTMLProps<HTMLDivElement> {}\n\nconst styles = css({\n    ascDiv: {\n        fontSize: 13,\n    },\n});\n\nconst Div: FC<IDivElement> = (props: IDivElement) => {\n    const newProps = useMergedProps(styles, props, Div.defaultProps);\n    return <div {...(newProps as IDivElement)} />;\n};\n\nDiv.defaultProps = {\n    className: styles.classNames.ascDiv,\n};\n\nexport { Div };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\n\nexport interface IHrElement extends React.HTMLProps<HTMLHRElement> {}\n\nconst styles = css({\n    ascHr: {},\n});\n\nconst Hr: FC<IHrElement> = (props: IHrElement) => {\n    const newProps = useMergedProps(styles, props, Hr.defaultProps);\n    return <hr {...(newProps as IHrElement)} />;\n};\n\nHr.defaultProps = {\n    className: styles.classNames.ascHr,\n};\n\nexport { Hr };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\nimport { DepricatedImageAttributes } from \"./types\";\n\nexport interface IImgElement extends React.HTMLProps<HTMLImageElement>, DepricatedImageAttributes {}\n\nconst styles = css({\n    ascImg: {},\n});\n\nconst Img: FC<IImgElement> = (props: IImgElement) => {\n    const newProps = useMergedProps(styles, props, Img.defaultProps);\n    // @ts-ignore\n    return <img {...(newProps as IImgElement)} />;\n};\n\nImg.defaultProps = {\n    className: styles.classNames.ascImg,\n};\n\nexport { Img };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\n\nexport interface ILilElement extends React.HTMLProps<HTMLLIElement> {}\n\nconst styles = css({\n    ascLi: {},\n});\n\nconst Li: FC<ILilElement> = (props: ILilElement) => {\n    const newProps = useMergedProps(styles, props, Li.defaultProps);\n    return <li {...(newProps as ILilElement)} />;\n};\n\nLi.defaultProps = {\n    className: styles.classNames.ascLi,\n};\n\nexport { Li };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\n\nexport interface IOlElement extends React.HTMLProps<HTMLOListElement> {}\n\nconst styles = css({\n    ascOl: {},\n});\n\nconst Ol: FC<IOlElement> = (props: IOlElement) => {\n    const newProps = useMergedProps(styles, props, Ol.defaultProps);\n    // @ts-ignore\n    return <ol {...(newProps as IOlElement)} />;\n};\n\nOl.defaultProps = {\n    className: styles.classNames.ascOl,\n};\n\nexport { Ol };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\n\nexport interface ISpanElement extends React.HTMLProps<HTMLSpanElement> {}\n\nconst styles = css({\n    ascSpan: {\n        fontSize: 13,\n    },\n});\n\nconst Span: FC<ISpanElement> = (props: ISpanElement) => {\n    const newProps = useMergedProps(styles, props, Span.defaultProps);\n    return <span {...(newProps as ISpanElement)} />;\n};\n\nSpan.defaultProps = {\n    className: styles.classNames.ascSpan,\n};\n\nexport { Span };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\nimport { DepricatedTableAttributes } from \"./types\";\n\nexport interface ITableElement\n    extends React.HTMLProps<HTMLTableElement>,\n        DepricatedTableAttributes {}\n\nconst styles = css({\n    ascTable: {\n        fontSize: 13,\n    },\n});\n\nconst Table: FC<ITableElement> = (props: ITableElement) => {\n    const newProps = useMergedProps(styles, props, Table.defaultProps);\n    return (\n        <table {...(newProps as ITableElement)}>\n            <tbody>{props.children}</tbody>\n        </table>\n    );\n};\n\nTable.defaultProps = {\n    className: styles.classNames.ascTable,\n    cellPadding: 0,\n    cellSpacing: 0,\n    width: \"100%\",\n    border: 0,\n};\n\nexport { Table };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\nimport { DepricatedTdAttributes } from \"./types\";\n\nexport interface ITdElement extends React.HTMLProps<HTMLTableCellElement>, DepricatedTdAttributes {}\n\nconst styles = css({\n    ascTd: {\n        fontSize: 13,\n    },\n});\n\nconst Td: FC<ITdElement> = (props: ITdElement) => {\n    const newProps = useMergedProps(styles, props, Td.defaultProps);\n    return <td {...(newProps as ITdElement)} />;\n};\n\nTd.defaultProps = {\n    className: styles.classNames.ascTd,\n    align: \"left\",\n};\n\nexport { Td };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\nimport { DepricatedTdAttributes } from \"./types\";\n\nexport interface ITrElement extends React.HTMLProps<HTMLTableRowElement>, DepricatedTdAttributes {}\n\nconst styles = css({\n    ascTr: {},\n});\n\nconst Tr: FC<ITrElement> = (props: ITrElement) => {\n    const newProps = useMergedProps(styles, props, Tr.defaultProps);\n    return <tr {...(newProps as ITrElement)} />;\n};\n\nTr.defaultProps = {\n    className: styles.classNames.ascTr,\n};\n\nexport { Tr };\n","import React, { FC } from \"react\";\nimport { css, useMergedProps } from \"@email/css\";\n\nexport interface IUlElement extends React.HTMLProps<HTMLUListElement> {}\n\nconst styles = css({\n    ascUl: {},\n});\n\nconst Ul: FC<IUlElement> = (props: IUlElement) => {\n    const newProps = useMergedProps(styles, props, Ul.defaultProps);\n    return <ul {...(newProps as IUlElement)} />;\n};\n\nUl.defaultProps = {\n    className: styles.classNames.ascUl,\n};\n\nexport { Ul };\n"],"names":["styles","css","ascA","fontSize","A","props","newProps","useMergedProps","defaultProps","React","className","classNames","target","ascBody","args","theme","fonts","fontDefaultSize","width","height","backgroundColor","colors","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","Body","ascDiv","Div","ascHr","Hr","ascImg","Img","ascLi","Li","ascOl","Ol","ascSpan","Span","ascTable","Table","children","cellPadding","cellSpacing","border","ascTd","Td","align","ascTr","Tr","ascUl","Ul"],"mappings":"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"}